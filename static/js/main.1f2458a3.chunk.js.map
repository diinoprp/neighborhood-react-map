{"version":3,"sources":["foursquareSVG.svg","component/Map.js","API/index.js","component/ListItem.js","component/VenueList.js","component/AppMenu.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","MyMapComponent","withScriptjs","withGoogleMap","props","react_default","a","createElement","lib","defaultZoom","zoom","defaultCenter","lat","lng","center","parseFloat","onClick","onMapClick","markers","filter","marker","isVisible","map","index","venueInfo","venues","find","venue","id","key","position","handleMarkerClick","animation","activeMarker","google","maps","Animation","BOUNCE","isOpen","onCloseClick","onInfoWindowClose","Fragment","name","bestPhoto","Image","src","concat","prefix","suffix","alt","rating","style","color","ratingColor","description","poweredByFourSquare","width","height","Map","Object","assign","this","googleMapURL","loadingElement","containerElement","mapElement","Component","Helper","keys","client_id","client_secret","v","join","urlParams","Accept","Accept-Language","endPoint","method","requestData","headers","fetch","baseURL","auth","urlBuilder","then","res","json","SquareAPI","simpleFetch","VENUE_ID","ListItem","_this","handleListItemClick","aria-label","tabIndex","categories","icon","className","location","address","VenueList","filterVenues","idx","component_ListItem","AppMenu","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleFilterVenues","state","query","trim","toLowerCase","includes","handleChange","e","setState","target","value","isMatched","updateSuperState","menuOpen","_this2","BurgerMenu","noOverlay","type","placeholder","onChange","component_VenueList","Navbar","bg","zIndex","dist","open","animationDuration","strokeWidth","handleMenuClick","tabindex","FallbackComponent","_ref","componentStack","error","App","closeAllMarkers","getVenueDetails","newVenue","response","onMapClicked","onInfoWindowClosed","obj","search","near","limit","results","geocode","feature","geometry","commonjs_default","component_AppMenu","Map_Map","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","render","src_App_0","document","getElementById","URL","process","href","origin","addEventListener","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.1f2458a3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/foursquareSVG.36766770.svg\";","/* global google */\r\nimport React, { Component } from 'react';\r\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker, InfoWindow } from \"react-google-maps\"\r\nimport poweredByFourSquare from '../foursquareSVG.svg';\r\nimport { Image } from 'react-bootstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst MyMapComponent = withScriptjs(withGoogleMap((props) =>\r\n  <GoogleMap\r\n    defaultZoom={8}\r\n    zoom={props.zoom}\r\n    defaultCenter={{lat: -22.910289, lng: -43.173356}}\r\n    center={{ lat: parseFloat(props.center.lat), lng: parseFloat(props.center.lng) }}\r\n    onClick={() => props.onMapClick()}\r\n  >\r\n    {props.markers &&\r\n      props.markers.filter(marker => marker.isVisible).map((marker, index) => {\r\n        //Shows only visible markers\r\n        const venueInfo = props.venues.find(venue => venue.id === marker.id)\r\n        return (\r\n          <Marker\r\n            key={index}\r\n            position={{ lat: marker.lat, lng: marker.lng }}\r\n            onClick={() => props.handleMarkerClick(marker)}\r\n            animation={props.activeMarker ?\r\n              (marker.id === props.activeMarker.id ?\r\n                google.maps.Animation.BOUNCE : '0'\r\n              ) : '0'} // Adds Bounce animation if it's the active marker\r\n          >\r\n            { //Shows InfoWindow if the marker is Opened\r\n              marker.isOpen && (\r\n              <InfoWindow onCloseClick={() => props.onInfoWindowClose()}>\r\n                <React.Fragment>\r\n                  <h3>{venueInfo.name}</h3>\r\n\r\n                  {// If avaiable, shows the venue Picture\r\n                    venueInfo.bestPhoto && (\r\n                    <Image\r\n                      src={`${venueInfo.bestPhoto.prefix}250x250${venueInfo.bestPhoto.suffix}`}\r\n                      alt={venueInfo.name}\r\n                    />)}\r\n\r\n                  {// If avaiable, shows the venue Rating\r\n                    venueInfo.rating &&\r\n                    <h4>Nota:\r\n                      <span style={{ color: `#${venueInfo.ratingColor}` }}>\r\n                        {venueInfo.rating}\r\n                      </span>\r\n                    </h4>\r\n                  }\r\n                  <p>{venueInfo.description}</p>\r\n                  {/* Foursquare API Copyright */}\r\n                  <Image\r\n                    src={poweredByFourSquare}\r\n                    alt=\"Powered by FourSquare\"\r\n                    width=\"45%\"\r\n                    height=\"15%\" />\r\n                </React.Fragment>\r\n              </InfoWindow>\r\n            )}\r\n          </Marker>\r\n        );\r\n      })}\r\n  </GoogleMap>\r\n));\r\n\r\n\r\nMyMapComponent.propTypes = {\r\n  zoom: PropTypes.number,\r\n  center: PropTypes.shape({\r\n    lat: PropTypes.number.isRequired,\r\n    lng: PropTypes.number.isRequired\r\n  }),\r\n  onClick: PropTypes.func\r\n}\r\n\r\n\r\nexport default class Map extends Component {\r\n  render() {\r\n    return (\r\n      < MyMapComponent\r\n        {...this.props}\r\n        googleMapURL='https://maps.googleapis.com/maps/api/js?v=3.exp&key=AIzaSyAtvD2ig0fFoCUVNTnOdeEnXvLvJkUXbwY'\r\n        loadingElement={< div style={{ height: `100%` }} />}\r\n        containerElement={< div style={{ height: `calc(100vh - 36px)`, width: `100%` }} />}\r\n        mapElement={< div style={{ height: `100%` }} />}\r\n      />\r\n    )\r\n  }\r\n}\r\n","//Helper class for the Foursquare API Requests\r\nclass Helper {\r\n\r\n  // Returns the base URL\r\n  static baseURL() {\r\n    return \"https://api.foursquare.com/v2\"\r\n  }\r\n\r\n  // Returns the authentication parameters\r\n  static auth() {\r\n    const keys = {\r\n      client_id: \"NHSOX5IC0DHN5SGGAXOIIYCKGIWAYSLLNC0R3PCSAT0FCUJ1\",\r\n      client_secret: \"ARMGLW34I4IFTXAKBJCBZYG45EOQMHBLHQJHYEJLYAQXP1RE\",\r\n      v: \"20180929\"\r\n    }\r\n\r\n     return Object.keys(keys)\r\n      .map(key => `${key}=${keys[key]}`)\r\n      .join(\"&\")\r\n  };\r\n\r\n  // Build the full URL\r\n  static urlBuilder(urlParams){\r\n    if(!urlParams){\r\n      return \"\"\r\n    }\r\n\r\n    return Object.keys(urlParams)\r\n        .map(key => `${key}=${urlParams[key]}`)\r\n        .join(\"&\");\r\n  }\r\n\r\n  // Set the Headers for the Request\r\n  static headers() {\r\n    return {\r\n      Accept: \"application/json\",\r\n      \"Accept-Language\": \"pt\"\r\n    };\r\n  }\r\n\r\n  // Do a simple fetch using the Helper methods\r\n  static simpleFetch(endPoint, method, urlParams) {\r\n    let requestData = {\r\n      method,\r\n      headers: Helper.headers()\r\n    }\r\n\r\n    return fetch(`${Helper.baseURL()}${endPoint}?${Helper.auth()}&${Helper.urlBuilder(urlParams)}`\r\n      , requestData\r\n    ).then(res => res.json());\r\n  }\r\n}\r\n\r\nexport default class SquareAPI {\r\n\r\n  // Search for venues\r\n  static search(urlParams) {\r\n    return Helper.simpleFetch(\"/venues/search\", \"GET\", urlParams);\r\n  }\r\n\r\n  // Get details of a single venue\r\n  static getVenueDetails(VENUE_ID) {\r\n    return Helper.simpleFetch(`/venues/${VENUE_ID}`, \"GET\");\r\n  }\r\n\r\n  // Get pictures of a single venue\r\n  static getVenuePhotos(VENUE_ID) {\r\n    return Helper.simpleFetch(`/venues/${VENUE_ID}/photos`, \"GET\");\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ListItem extends Component {\r\n  render() {\r\n    return (\r\n      <li\r\n        onClick={() => this.props.handleListItemClick(this.props)}\r\n        aria-label={this.props.name}\r\n        tabIndex='0'\r\n      >\r\n        <div>\r\n          <img src={this.props.categories[0].icon.prefix + \"32\" + this.props.categories[0].icon.suffix} alt={this.props.categories[0].name} />\r\n          {this.props.name}\r\n        </div>\r\n        <div className=\"venueAddress\">{this.props.location.address}</div>\r\n      </li>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ListItem;\r\n\r\nListItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  handleListItemClick: PropTypes.func.isRequired,\r\n  location: PropTypes.shape({\r\n    address: PropTypes.string.isRequired\r\n  }),\r\n  categories: PropTypes.arrayOf(PropTypes.shape({\r\n    icon: PropTypes.shape({\r\n      prefix: PropTypes.string.isRequired,\r\n      suffix: PropTypes.string.isRequired,\r\n    })\r\n  }))\r\n}\r\n","import React, { Component } from 'react';\r\nimport ListItem from './ListItem';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass VenueList extends Component {\r\n/* Represents the List of venues that is displayed on the sidebar */\r\n  render() {\r\n    return (\r\n      <div style={{ height: `100%` }}>\r\n        <ul className=\"places-list\">\r\n          {this.props.filterVenues.filter && this.props.filterVenues.map((venue, idx) =>\r\n            <ListItem\r\n              key={idx}\r\n              {...venue}\r\n              handleListItemClick={this.props.handleListItemClick}\r\n            />\r\n          )}\r\n        </ul>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default VenueList;\r\n\r\nVenueList.propTypes = {\r\n  filterVenues: PropTypes.func.isRequired,\r\n  handleListItemClick: PropTypes.func.isRequired\r\n}","import React, { Component } from 'react';\r\nimport { slide as Menu } from 'react-burger-menu'\r\nimport { Navbar } from 'react-bootstrap';\r\nimport { HamburgerButton } from 'react-hamburger-button';\r\nimport VenueList from './VenueList';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass AppMenu extends Component {\r\n  /*\r\n    Component for the menu, including top navBar and SideBar\r\n  */\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      menuOpen: false,\r\n      query: '',\r\n      venues: []\r\n    }\r\n  }\r\n\r\n  handleMenuClick() {\r\n    this.setState({ menuOpen: !this.state.menuOpen })\r\n  }\r\n\r\n  // Filter venues based on the Search Venues Input value\r\n  handleFilterVenues = () => {\r\n    if (this.state.query.trim() !== \"\") {\r\n      const venues = this.props.venues.filter(venue =>\r\n        venue.name\r\n          .toLowerCase()\r\n          .includes(this.state.query.toLowerCase()))\r\n      return venues;\r\n    }\r\n    return this.props.venues;\r\n  };\r\n\r\n  // Handle changes in the Search venues input field\r\n  handleChange = e => {\r\n    this.setState({ query: e.target.value });\r\n\r\n    const markers = this.props.venues.map(venue => {\r\n      const isMatched = venue.name.toLowerCase().includes(e.target.value.toLowerCase());\r\n      const marker = this.props.markers.find(marker => marker.id === venue.id);\r\n      if (isMatched) {\r\n        marker.isVisible = true;\r\n      } else {\r\n        marker.isVisible = false;\r\n      }\r\n\r\n      return marker;\r\n    });\r\n\r\n    this.props.updateSuperState({ markers })\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Menu className=\"venueList\" isOpen={this.state.menuOpen} noOverlay>\r\n          <input\r\n            type={\"search\"}\r\n            className={\"searchInput\"}\r\n            placeholder={\"Filter Venues\"}\r\n            onChange={this.handleChange}\r\n            aria-label=\"Filter Venues\"\r\n          />\r\n          <VenueList {...this.props} filterVenues={this.handleFilterVenues()} handleListItemClick={this.props.handleListItemClick} />\r\n        </Menu>\r\n        <Navbar bg=\"dark\" style={{ zIndex: 1 }}>\r\n          <HamburgerButton\r\n            open={this.state.menuOpen}\r\n            className=\"hamburgerButton\"\r\n            width={23}\r\n            height={20}\r\n            animationDuration={0.5}\r\n            strokeWidth={2}\r\n            color='white'\r\n            onClick={() => this.handleMenuClick()}\r\n            style={{tabindex:'0'}}\r\n          />\r\n        </Navbar>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppMenu;\r\n\r\nAppMenu.propTypes = {\r\n  venues: PropTypes.array.isRequired,\r\n  markers: PropTypes.array.isRequired,\r\n  updateSuperState: PropTypes.func.isRequired\r\n}\r\n","import React, { Component } from 'react';\nimport Map from './component/Map';\nimport './App.scss';\nimport SquareAPI from './API/';\nimport AppMenu from './component/AppMenu';\nimport ErrorBoundary from 'react-error-boundary';\n\n\nconst FallbackComponent = ({ componentStack, error }) => (\n  <div>\n    <p><strong>Oops! An error occured!</strong></p>\n  </div>\n);\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      venues: [],\n      markers: [],\n      center: [],\n      zoom: 12,\n      activeMarker: {},\n      updateSuperState: obj => {\n        this.setState(obj);\n      }\n    }\n  }\n\n  closeAllMarkers = () => {\n    const markers = this.state.markers.map(marker => {\n      marker.isOpen = false;\n      this.setState({activeMarker: null})\n      return marker;\n    })\n    this.setState({ markers: Object.assign(this.state.markers, markers) });\n  }\n\n  handleMarkerClick = (marker) => {\n    this.closeAllMarkers();\n    marker.isOpen = true;\n    this.setState({activeMarker: marker});\n    this.setState({ markers: Object.assign(this.state.markers, marker) });\n\n    const venue = this.state.venues.find(venue => venue.id === marker.id);\n\n    SquareAPI.getVenueDetails(marker.id).then(res => {\n      const newVenue = Object.assign(venue, res.response.venue);\n      this.setState({ venues: Object.assign(this.state.venues, newVenue) });\n    });\n  }\n\n  onMapClicked = () => {\n    if(this.state.activeMarker) {\n      this.setState({activeMarker: null});\n      this.closeAllMarkers();\n    }\n  }\n\n  handleListItemClick = venue => {\n    const marker = this.state.markers.find(marker => marker.id === venue.id);\n    this.handleMarkerClick(marker);\n  }\n\n  onInfoWindowClosed = () => {\n    this.setState({activeMarker: null});\n  }\n\n  componentDidMount() {\n    // Foursquare API Request\n    SquareAPI.search({\n      near: \"Rio de Janeiro\",\n      query: \"Museum\",\n      limit: 10\n    }).then(results => {\n      const { venues } = results.response;\n      const { center } = results.response.geocode.feature.geometry;\n      const markers = venues.map(venue => {\n        return {\n          lat: venue.location.lat,\n          lng: venue.location.lng,\n          isOpen: false,\n          isVisible: true,\n          id: venue.id\n        };\n      });\n      this.setState({ venues, center, markers })\n    })\n  }\n\n  render() {\n    return (\n      <ErrorBoundary FallbackComponent={FallbackComponent}>\n        <div className=\"App\">\n          <AppMenu {...this.state} handleListItemClick={this.handleListItemClick}/>\n          <Map {...this.state}\n            handleMarkerClick={this.handleMarkerClick} \n            onMapClick={this.onMapClicked}\n            onInfoWindowClose={this.onInfoWindowClosed}\n          />\n        </div>\n      </ErrorBoundary>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}